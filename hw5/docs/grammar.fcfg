## Author: Mike Roylance <roylance@uw.edu>

% start S
############################
# Grammar Rules
############################# 

S[SEM = <?subj(?vp)>] -> NP[NUM=?n,SEM=?subj] VP[NUM=?n,SEM=?vp]
S[SEM = <?subj(?v1) | ?subj(?v2)>] -> NP[NUM=?n,SEM=?subj] VP[NUM=?n,SEM=?v1] CC VP[NUM=?n,SEM=?v2]

NP[LOC=?l,NUM=?n,SEM=?np] -> PropN[LOC=?l,NUM=?n,SEM=?np]
NP[NUM=?n,SEM=<?det(?np)> ] -> Det[NUM=?n,SEM=?det] N[NUM=?n,SEM=?np]

VP[NUM=?n,SEM=?v] -> IV[NUM=?n,SEM=?v]
VP[NUM=?n,SEM=<?v(?obj)>] -> TV[NUM=?n,SEM=?v] NP[SEM=?obj]

#############################
# Lexical Rules
#############################

PropN[-LOC,NUM=sg,SEM=<\P.P(john)>] -> 'John'

Det[NUM=sg,SEM=<\P Q.exists x.(P(x) & Q(x))>] -> 'a'
Det[NUM=pl,SEM=<\P Q.all x.(P(x) & Q(x))>] -> 'all'

N[NUM=sg,SEM=<\x.sandwich(x)>] -> 'sandwich'
N[NUM=sg,SEM=<\x.student(x)>] -> 'student'
N[NUM=pl,SEM=<\x.student(x)>] -> 'students'

IV[NUM=sg,SEM=<\x.eat(x)>,TNS=pres] -> 'eats'
IV[NUM=pl,SEM=<\x.eat(x)>,TNS=pres] -> 'eat'
IV[NUM=pl,SEM=<\x.drink(x)>,TNS=pres] -> 'drink'

TV[NUM=sg,SEM=<\X x.X(\y.eat(x,y))>,TNS=pres] -> 'eats'

CC -> 'or'

